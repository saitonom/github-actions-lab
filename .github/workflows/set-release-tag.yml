# ver.2
name: Create Release Tag

on:
  pull_request:
    branches:
      - main
    types: 
      - closed

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.head.ref, 'release')
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Get branch date
        id: get_branch_date
        run: echo "branch_name=$(echo ${{ github.event.pull_request.head.ref }} | cut -d'/' -f2)" >> $GITHUB_ENV
      
      - name: Check if tag exists
        id: check_tag
        run: echo "tag_exists=$(git ls-remote --tags origin refs/tags/${{ env.branch_name }}*)" >> $GITHUB_ENV"
        
      - name: Determine new tag name
        id: new_tag_name
        run: |
          if [ -n "$tag_exists" ]; then
            counter=1
            while [ -n "$(git ls-remote --tags origin refs/tags/${{ env.branch_name }}-${counter}*)" ]; do
              counter=$((counter + 1))
            done
            echo "new_tag_name=${{ env.branch_name }}-${counter}"
            echo "new_tag_name=${{ env.branch_name }}-${counter}" >> $GITHUB_ENV
          else
            echo "new_tag_name=${{ env.branch_name }}"
            echo "new_tag_name=${{ env.branch_name }}" >> $GITHUB_ENV
          fi
          
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.new_tag_name }}
          release_name: ${{ env.new_tag_name }}
          draft: false
          prerelease: false
